#=================================================
# 自动构建 OpenWrt G-DOCK2.0
# https://github.com/ytalm/OpenWrt-R619AC-128M
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: flyheart
# 感谢p3terx大神的一键编译脚本
# https://github.com/P3TERX/Actions-OpenWrt
# Blog: https://p3terx.com
#=================================================
#
#修改以下代码或者开启触发开关都好，要严格按格式对好,前面有多少空格也要看清楚
#代码里有 name: 后面的内容随便改,冒号后面是有个空格的,如果修改固件名字就要考虑能不能显示出你想要的

name: Build G-Dock Lean's OpenWrt

on:
  repository_dispatch:

#release发布触发开始编译(只是一个触发条件,不会发布的,又麻烦,没卵用,不用研究) 
  release:
    types: [lean, gdock]
  
#编辑任意指定文件触发开始编译(去掉下面5个#开启,最下面一行是指定修改什么文件就触发编译,我现在是修改mod.config文件触发)  
  push:                               # push 操作
    branches:                         # 分支
      - master                        # 主分支
    paths:                            # 路径
      - "gdock-lean-openwrt.config"   # 监听mod.config的push操作

#定时触发开始编译(开启定时编译请先关闭SSH,要不然SSH没人管,会卡SSH编译失败)
  schedule:                           # 时间表
    - cron: 0 4 28 * *                 # 每月1日国际时间4点，北京时间中午12点执行(北京+8)
  
#点☆Star触发开始编译  
  watch:                              # 监视操作
   types: started                    # 点击 star 之后
    
env:
  REPO_URL: https://github.com/coolsnowwolf/lede     #编译固件源码链接（请勿修改）
  REPO_BRANCH: master                                #源码链接的分支（请勿修改）
  FEEDS_CONF: feeds.conf.default               
  CONFIG_FILE: config/lean/ipq40xx/gdock-lean-openwrt.config  #配置文件（可SSH远程定制固件插件，也可在本地提取配置粘贴到此文件）
  DIY_SH: scripts/lean-openwrt.sh                    #自定义执行文件
  IPV6MOD_IN_FIRMWARE: true
  UPLOAD_RCLONE: true
  UPLOAD_BIN_DIR: true                               #上传【bin文件夹】到github空间（true=开启）（false=关闭）
  UPLOAD_FIRMWARE: true                              #上传固件到github空间（true=开启）（false=关闭）
  UPLOAD_COWTRANSFER: true                           #上传固件到到【奶牛快传】（true=开启）（false=关闭）   
  UPLOAD_WETRANSFER: true                            #上传固件到到【WETRANSFER】（true=开启）（false=关闭）
  TZ: Asia/Shanghai                                  #时区 亚洲/上海


jobs:
  build:
    runs-on: ubuntu-18.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: 准备结束                          # 1.导入主分支
      uses: actions/checkout@main

    - name: 开始安装编译所需系统                # 2.初始化环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/JURWx)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: 下载固件源码
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: 加载feeds跟自定义插件
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_SH

    - name: 下载feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: 安装feeds跟自定义插件
      run: cd openwrt && ./scripts/feeds install -a

    - name: 加载diy.config设置
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_SH

   # - name: SSH远程连接服务器配置固件
   #   uses: P3TERX/debugger-action@main
   #   if: env.SSH_ACTIONS == 'true' || contains(github.event.action, 'ssh')

    - name: 下载软件包
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: 开始编译固件
      id: compile
      run: |
        cd openwrt
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo -e "$(nproc) thread compile"
        echo "::set-output name=status::success"
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "::set-output name=DEVICE_NAME::$(cat DEVICE_NAME)"
        echo "::set-output name=FILE_DATE::$(date +"%Y%m%d%H%M")"
    - name: 检查github储存空间情况
      if: (!cancelled())
      run: df -hT
      
    - name: 准备Artifact
      run: |
          mkdir -p ./new/package
          cp -rf $(find ./openwrt/bin -type f -name "*.ipk") ./new/package
          
    - name: 上传bin文件夹(固件+ipk)在github空间
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_bin_${{ steps.compile.outputs.DEVICE_NAME }}_${{ steps.compile.outputs.FILE_DATE }}
        path: openwrt/bin

    - name: 上传IPK
      uses: actions/upload-artifact@main
      with:
        name: OpenWrt-Mod-Ipk
        path: ./new/package
    
    - name: 整理固件文件夹
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "::set-output name=FIRMWARE::$PWD"
        echo "::set-output name=status::success"

    - name: 上传固件在github空间
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware_${{ steps.compile.outputs.DEVICE_NAME }}_${{ steps.compile.outputs.FILE_DATE }}
        path: ${{ steps.organize.outputs.FIRMWARE }}

    - name: 上传固件到奶牛快传
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_COWTRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress ${{ steps.organize.outputs.FIRMWARE }} | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"

    - name: 上传固件到WeTransfer
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_WETRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress ${{ steps.organize.outputs.FIRMWARE }} | tee wetransfer.log
